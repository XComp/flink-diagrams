/'
 ' Licensed to the Apache Software Foundation (ASF) under one
 ' or more contributor license agreements.  See the NOTICE file
 ' distributed with this work for additional information
 ' regarding copyright ownership.  The ASF licenses this file
 ' to you under the Apache License, Version 2.0 (the
 ' "License"); you may not use this file except in compliance
 ' with the License.  You may obtain a copy of the License at
 '
 '    http://www.apache.org/licenses/LICENSE-2.0
 '
 ' Unless required by applicable law or agreed to in writing, software
 ' distributed under the License is distributed on an "AS IS" BASIS,
 ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ' See the License for the specific language governing permissions and
 ' limitations under the License.
 '/

@startuml

title FLIP-285 Leader Election initialization for ResourceManager

actor Flink
participant HighAvailabilityServices as HAS
participant LeaderElectionService as LES
participant LeaderElectionDriver as LED
participant LeaderElection as LE
participant LeaderContender as LC

activate Flink
Flink -> HAS : new
activate HAS
HAS -> LES : new
activate LES
LES -> LED : new
activate LED
LED --> LES
LES --> HAS
HAS --> Flink
Flink -> Flink : Initialize components
Flink -> HAS : getResourceManagerLeaderElectionService
HAS -> LES : createLeaderElection("resource_manager")
LES -> LE : new
activate LE
LE --> LES
LES --> HAS
HAS --> Flink
Flink -> LC : new with LeaderElection instance
activate LC
LC -> LE : register(LeaderContender)
LE --> LC
LC --> Flink
== Instantiation done ==
Flink -> LC : start()
LC -> LE : LeaderElection.startLeaderElection()
LE -> LES : registerContender("resource_manager", resourceManagerInstance)
alt if LeaderElectionService has leadership during registration
LES -> LC : grantLeadership(UUID)
LC -> LC : do things like reinstantiating\nan RPC endpoint pointing to\n<leaderAddress>
LC -> LE : confirmLeadership(UUID, leaderAddress)
LE -> LES : confirmLeadership("resource_manager", UUID, leaderAddress)
LES -> LED : writeLeaderInformation(""resource_manager", UUID, leaderAddress)
LED --> LES
end
LES --> LE
LE --> LC

@enduml
