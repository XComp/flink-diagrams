@startuml
'https://plantuml.com/class-diagram

title Multiple-Component Leader Election introduced in Apache Flink 1.15

interface MultipleComponentLeaderElectionDriver {
    void close()
    boolean hasLeadership()
    void publishLeaderInformation(componentId, leaderInformation)
    void deleteLeaderInformation(componentId)
}
hide MultipleComponentLeaderElectionDriver fields

interface MultipleComponentLeaderElectionDriver.Listener {
    void isLeader()
    void notLeader()
    void notifyLeaderInformationChange(componentId, leaderInformation)
    void notifyAllKnownLeaderInformation(leaderInformationWithComponentIds)
}
hide MultipleComponentLeaderElectionDriver.Listener fields

interface MultipleComponentLeaderElectionService {
    void close()
    LeaderElectionDriverFactory createDriverFactory(componentId)
    void publishLeaderInformation(String componentId, LeaderInformation leaderInformation)
    void registerLeaderElectionEventHandler(componentId, leaderElectionEventHandler)
    void unregisterLeaderElectionEventHandler(String componentId)
    boolean hasLeadership((componentId)
}
hide MultipleComponentLeaderElectionService fields

interface LeaderContender
hide LeaderContender members

interface LeaderElectionDriver {
    void writeLeaderInformation(LeaderInformation)
    boolean hasLeadership()
    void close()
}
hide LeaderElectionDriver fields

interface LeaderElectionEventHandler {
    void onGrantLeadership(newLeaderSessionId)
    void onRevokeLeadership()
    void onLeaderInformationChange(leaderInformation)
}
hide LeaderElectionEventHandler fields

interface LeaderElectionService {
    void start(LeaderContender)
    void stop()
    void confirmLeadership(leaderSessionID, leaderAddress)
    boolean hasLeadership(leaderSessionId)
}
hide LeaderElectionService fields

class DefaultMultipleComponentLeaderElectionService {
    leaderElectionDriver: MultipleComponentLeaderElectionDriver
    leaderElectionEventHandlers: Map<ComponentId, LeaderElectionEventHandler>
}
hide DefaultMultipleComponentLeaderElectionService methods

class DefaultLeaderElectionService {
    leaderElectionDriver: LeaderElectionDriver
    leaderContender: LeaderContender
}
hide DefaultLeaderElectionService methods

class MultipleComponentLeaderElectionDriverAdapter {
    multipleComponentLeaderElectionService: MultipleComponentLeaderElectionService
}
hide MultipleComponentLeaderElectionDriverAdapter methods

class MultipleComponentLeaderElectionDriverAdapter implements LeaderElectionDriver

class DefaultMultipleComponentLeaderElectionService implements MultipleComponentLeaderElectionService
class DefaultMultipleComponentLeaderElectionService implements MultipleComponentLeaderElectionDriver.Listener

class DefaultLeaderElectionService implements LeaderElectionService, LeaderElectionEventHandler

class KubernetesMultipleComponentLeaderElectionDriver implements MultipleComponentLeaderElectionDriver
hide KubernetesMultipleComponentLeaderElectionDriver members

class ZooKeeperMultipleComponentLeaderElectionDriver implements MultipleComponentLeaderElectionDriver
hide ZooKeeperMultipleComponentLeaderElectionDriver members

DefaultLeaderElectionService --> LeaderElectionDriver : uses
LeaderContender --> LeaderElectionService : uses

MultipleComponentLeaderElectionDriverAdapter -> MultipleComponentLeaderElectionService : uses

DefaultMultipleComponentLeaderElectionService --> LeaderElectionEventHandler : uses
DefaultMultipleComponentLeaderElectionService --> MultipleComponentLeaderElectionDriver : uses

@enduml