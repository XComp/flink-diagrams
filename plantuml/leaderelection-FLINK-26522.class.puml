@startuml
'https://plantuml.com/class-diagram

title Proposed refactoring (Version 2) of the multi-component Leader Election that was introduced in Apache Flink 1.15+ (FLINK-26522)

interface LeaderContender {
    void grantLeadership(leaderSessionID)
    void revokeLeadership()
    String getDescription()
}
hide LeaderContender fields
note right: <b>LeaderContender.getDescription()</b>\n is used to replace the componentId

interface LeaderElectionDriver {
    void writeLeaderInformation(LeaderInformation)
    boolean hasLeadership()
    void close()
}
hide LeaderElectionDriver fields

interface LeaderElectionEventHandler {
    void onGrantLeadership(newLeaderSessionId)
    void onRevokeLeadership()
    void onLeaderInformationChange(leaderInformation)
}
hide LeaderElectionEventHandler fields

interface LeaderElectionService {
    void start()
    void close()
}
hide LeaderElectionService fields
note top of LeaderElectionService
    <b>LeaderElectionService</b> is handling the LeaderElectionDriver lifecycle.
    It is created and owned by the HighAvailabilityServices.
end note
note bottom of LeaderElectionService
    We could event make this a generic interface <b>ServiceAsync</b>
    that extends <b>AutoCloseableAsync</b> since it's a quite common
    pattern.
end note

interface LeaderElectionRegistry {
    LeaderElection register(LeaderContender)
    void remove(LeaderContender)
}
hide LeaderElectionRegistry fields

interface LeaderElection {
    void confirmLeadership(leaderSessionID, leaderAddress)
    boolean hasLeadership(leaderSessionId)
    void close()
}
hide LeaderElection fields
note bottom of LeaderElection
    <b>close()</b> is used to unregister the LeaderContender
    from the LeaderElectionRegistry. It is equivalent to the
    legacy <b>DefaultLeaderService.stop()</b> method.
    LeaderElection could extend AutoCloseableAsync.
end note

class DefaultLeaderElection implements LeaderElection {
    contender: LeaderContender
    registry: LeaderElectionRegistry
}
hide DefaultLeaderElection methods

class DefaultLeaderElectionService {
    leaderElectionDriver: LeaderElectionDriver
    leaderContenders: Collection<LeaderContender>
}
hide DefaultLeaderElectionService methods
note left of DefaultLeaderElectionService
    We should rename this to something like
    <b>MultiContenderLeaderElectionService</b>.
end note

class ZooKeeperLeaderElectionDriver implements LeaderElectionDriver
hide ZooKeeperLeaderElectionDriver members

class KubernetesLeaderElectionDriver implements LeaderElectionDriver
hide KubernetesLeaderElectionDriver members

class DefaultLeaderElectionService implements LeaderElectionRegistry, LeaderElectionService, LeaderElectionEventHandler

DefaultLeaderElectionService --> DefaultLeaderElection : creates
LeaderContender --> LeaderElection : uses
DefaultLeaderElection --> LeaderElectionRegistry : unregisters

LeaderElectionDriver ---> LeaderElectionEventHandler : uses
DefaultLeaderElectionService --> LeaderElectionDriver : uses
DefaultLeaderElectionService --> LeaderContender : uses

@enduml