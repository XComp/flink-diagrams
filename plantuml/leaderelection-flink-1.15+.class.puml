@startuml
'https://plantuml.com/class-diagram

title Per-process Leader Election introduced in Apache Flink 1.15

class LeaderInformation {
    leaderSessionID: UUID
    leaderAddress: String
}
hide LeaderInformation methods

class LeaderInformationWithComponentId {
    leaderInformation: LeaderInformation
    componentId: String
}
hide LeaderInformationWithComponentId methods

LeaderInformation -[hidden]- LeaderInformationWithComponentId

interface MultipleComponentLeaderElectionDriver {
    void close()
    boolean hasLeadership()
    void publishLeaderInformation(componentId, LeaderInformation)
    void deleteLeaderInformation(componentId)
}
hide MultipleComponentLeaderElectionDriver fields

interface MultipleComponentLeaderElectionDriver.Listener {
    void isLeader()
    void notLeader()
    void notifyLeaderInformationChange(componentId, LeaderInformation)
    void notifyAllKnownLeaderInformation(Collection<LeaderInformationWithComponentId>)
}
hide MultipleComponentLeaderElectionDriver.Listener fields
note left of MultipleComponentLeaderElectionDriver.Listener
    <u>notifyLeaderInformationChange(componentId, LeaderInformation)</u>:
    Used by ZooKeeper implementation where the monitoring happens per node
    (which contains the connectionInfo of a single component). The watcher
    gets triggered on a node change.

    <u>notifyAllKnownLeaderInformation(Collection<LeaderInformationWithComponentId>)</u>:
    Used by the k8s implementation where all connect information is stored
    in a single ConfigMap. The watcher gets triggered on a ConfigMap change.
end note

interface MultipleComponentLeaderElectionService {
    void close()
    LeaderElectionDriverFactory createDriverFactory(componentId)
    void publishLeaderInformation(componentId, LeaderInformation)
    void registerLeaderElectionEventHandler(componentId, LeaderElectionEventHandler)
    void unregisterLeaderElectionEventHandler(componentId)
    boolean hasLeadership(componentId)
}
hide MultipleComponentLeaderElectionService fields

interface LeaderContender {
    void grantLeadership(newLeaderSessionId)
    void revokeLeadership()
}
hide LeaderContender fields
note right: LeaderContender is implemented by any\nclass that utilizes LeaderElectionService

interface LeaderElectionDriver {
    void writeLeaderInformation(LeaderInformation)
    boolean hasLeadership()
    void close()
}
hide LeaderElectionDriver fields

interface LeaderElectionEventHandler {
    void onGrantLeadership(newLeaderSessionId)
    void onRevokeLeadership()
    void onLeaderInformationChange(leaderInformation)
}
hide LeaderElectionEventHandler fields

interface LeaderElectionService {
    void start(LeaderContender)
    void stop()
    void confirmLeadership(leaderSessionId, leaderAddress)
    boolean hasLeadership(leaderSessionId)
}
hide LeaderElectionService fields

class DefaultMultipleComponentLeaderElectionService {
    leaderElectionDriver: MultipleComponentLeaderElectionDriver
    leaderElectionEventHandlers: Map<ComponentId, LeaderElectionEventHandler>
}
hide DefaultMultipleComponentLeaderElectionService methods

class DefaultLeaderElectionService {
    leaderElectionDriver: LeaderElectionDriver
    leaderContender: LeaderContender
}
hide DefaultLeaderElectionService methods

class MultipleComponentLeaderElectionDriverAdapter {
    multipleComponentLeaderElectionService: MultipleComponentLeaderElectionService
}
hide MultipleComponentLeaderElectionDriverAdapter methods

MultipleComponentLeaderElectionDriverAdapter --|> LeaderElectionDriver

class DefaultMultipleComponentLeaderElectionService implements MultipleComponentLeaderElectionService
class DefaultMultipleComponentLeaderElectionService implements MultipleComponentLeaderElectionDriver.Listener

MultipleComponentLeaderElectionDriver --> MultipleComponentLeaderElectionDriver.Listener : listener used by\ndriver implementations

class DefaultLeaderElectionService implements LeaderElectionService, LeaderElectionEventHandler

class KubernetesMultipleComponentLeaderElectionDriver implements MultipleComponentLeaderElectionDriver
hide KubernetesMultipleComponentLeaderElectionDriver members

class ZooKeeperMultipleComponentLeaderElectionDriver implements MultipleComponentLeaderElectionDriver
hide ZooKeeperMultipleComponentLeaderElectionDriver members

DefaultLeaderElectionService --> LeaderElectionDriver : uses
DefaultLeaderElectionService --> LeaderContender : uses
LeaderContender --> LeaderElectionService : uses

MultipleComponentLeaderElectionDriverAdapter --> MultipleComponentLeaderElectionService : uses

DefaultMultipleComponentLeaderElectionService --> LeaderElectionEventHandler : uses
DefaultMultipleComponentLeaderElectionService --> MultipleComponentLeaderElectionDriver : uses

@enduml