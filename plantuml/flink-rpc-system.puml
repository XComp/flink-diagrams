/'
 ' Licensed to the Apache Software Foundation (ASF) under one
 ' or more contributor license agreements.  See the NOTICE file
 ' distributed with this work for additional information
 ' regarding copyright ownership.  The ASF licenses this file
 ' to you under the Apache License, Version 2.0 (the
 ' "License"); you may not use this file except in compliance
 ' with the License.  You may obtain a copy of the License at
 '
 '    http://www.apache.org/licenses/LICENSE-2.0
 '
 ' Unless required by applicable law or agreed to in writing, software
 ' distributed under the License is distributed on an "AS IS" BASIS,
 ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ' See the License for the specific language governing permissions and
 ' limitations under the License.
 '/

@startuml
'https://plantuml.com/class-diagram

hide members

package Conceptual <<Frame>> {
    class UserC
    interface RpcGateway

    class RpcServer
    class RpcEndpoint

    interface RpcSystem
    interface RpcService

    RpcSystem -d-> RpcService : creates
    RpcService -d-> RpcGateway : creates
    RpcService -d-> RpcServer : creates
    UserC -u-> RpcService : requests gateway
    UserC -> RpcGateway : uses
    RpcGateway -> RpcServer : communicates with
    RpcServer -l> RpcGateway: " "
    RpcServer -> RpcEndpoint : drives
    RpcEndpoint -l> RpcServer : schedules runnables

    note as N
        "Exists both onclient (RpcGateway)
         and server (RpcServer)."
    end note

    note as N_placeholder
        "Exists both onclient (RpcGateway)
         and server (RpcServer)."
    end note

    N -> RpcSystem
    N -> RpcService
    N -d-> N_placeholder
    N_placeholder -> RpcService

    hide N_placeholder
}

Conceptual -[hidden]-> Akka

package Akka <<Frame>> {
    class UserA
    class AkkaRpcSystem
    class ActorSystem <<Akka>>
    class AbstractActor <<Akka>>
    class AkkaInvocationHandler implements RpcGateway,RpcServer
    class AkkaRpcActor extends AbstractActor
    class AkkaRpcService

    UserA -d-> AkkaRpcService : requests gateway
    UserA -> AkkaInvocationHandler : uses
    AkkaRpcSystem -u-> AkkaRpcService : creates
    AkkaRpcSystem -u-> ActorSystem : creates
    AkkaRpcActor -[hidden]> AbstractActor
    AkkaInvocationHandler -> AkkaRpcActor : sends RpcInvocation
    AkkaRpcActor -> RpcEndpoint : invokes methods
    ActorSystem -u> AkkaRpcActor : drives
    AkkaRpcService -> ActorSystem : uses
    AkkaRpcService -u-> AkkaRpcActor : creates
    AkkaRpcService -u-> AkkaInvocationHandler : creates

    note left of AkkaInvocationHandler
        Used on server-side as an RpcServer
        exclusively to support self gateways.
    end note
}

@enduml
