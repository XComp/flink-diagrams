/'
 ' Licensed to the Apache Software Foundation (ASF) under one
 ' or more contributor license agreements.  See the NOTICE file
 ' distributed with this work for additional information
 ' regarding copyright ownership.  The ASF licenses this file
 ' to you under the Apache License, Version 2.0 (the
 ' "License"); you may not use this file except in compliance
 ' with the License.  You may obtain a copy of the License at
 '
 '    http://www.apache.org/licenses/LICENSE-2.0
 '
 ' Unless required by applicable law or agreed to in writing, software
 ' distributed under the License is distributed on an "AS IS" BASIS,
 ' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ' See the License for the specific language governing permissions and
 ' limitations under the License.
 '/

@startuml

title Flink Session Cluster Shutdown (Happy Path)

actor "External LeaderElection Process" as LL

participant "MultipleComponentLeaderElectionDriver (ZK or k8s)" as MCLED
participant DefaultMultipleComponentLeaderElectionService as MCLES
participant DefaultLeaderElectionService as LES
participant LeaderContender as LC
participant MultipleComponentLeaderElectionAdapterDriver as LED

LL -> MCLED : isLeader
activate MCLED
    MCLED -> MCLES : isLeader
    activate MCLES
        MCLES -> MCLES : save new session ID
        MCLES -> LES : onGrantLeadership for each component involved
    activate LES
        MCLES --> MCLED
    deactivate MCLES
deactivate MCLED
        LES -> LES : save new session ID in issuedLeaderSessionID
        LES -> LES : clear confirmed leadership
        LES -> LC : grantLeadership(newSessionId)
        activate LC
            LC -> LC : prepare leadership
            LC -> LES : confirmLeadership((newSessionId, address)
        deactivate LC
        LES -> LED : hasLeadership check
        activate LED
            LED -> MCLES : hasLeadership check for componentId
            activate MCLES
                MCLES -> MCLED : hasLeadership
                activate MCLED
                    MCLED -> LL : hasLeadership
                    LL --> MCLED
                    MCLED --> MCLES
                deactivate MCLED
                MCLES --> LED
            deactivate MCLES
            LED --> LES
        deactivate LED
        LES -> LES : verifies issuedLeaderSessionID with confirmed sessionID
        LES -> LED : writeLeaderInformation
    deactivate LES
    activate LED
        LED -> MCLES : publishLeaderInformation
    deactivate LED
    activate MCLES
        MCLES -> MCLED : publishLeaderInformation
    deactivate MCLES
    activate MCLED
        MCLED -> LL : write information out if leadership is still acquired
    deactivate MCLED
deactivate MCLED

LL -> MCLED : notify leader change
activate MCLED
    MCLED -> LES : onLeaderInformationChange(LeaderInformation)
deactivate MCLED
activate LES
    LES -> LES : check if confirmed leadership information is available
    alt confirmed leadership acquired
        LES -> LED : write confirmed leader information out
        activate LED
            LED -> MCLES : publishLeaderInformation
        deactivate LED
        activate MCLES
            MCLES -> MCLED : publishLeaderInformation
        deactivate MCLES
        activate MCLED
            MCLED -> LL : write information out if leadership is still acquired
        deactivate MCLED
    end
deactivate LES

@enduml
